{"version":3,"sources":["Styles.scss","components/Header/index.js","components/MainTable/TableStyles.js","components/MainTable/index.js","App.js","serviceWorker.js","index.js","assets/logo.png","components/Header/Header.scss","components/MainTable/MainTable.scss"],"names":["module","exports","Header","className","style","zIndex","src","logo","alt","Component","headRow","backgroundColor","minHeight","denseStyle","headCells","fontSize","fontWeight","color","variables","textMain","activeStyle","rows","MainTable","props","sortTable","field","direction","orderBy","row","toLowerCase","handleSort","column","sortDirection","console","log","selector","state","columns","name","cell","id","sortable","age","email","employees","this","customStyles","TableStyles","fixedHeader","data","onSort","sortFunction","theme","createMuiTheme","palette","primary","main","primaryMain","secondary","secondaryMain","typography","fontFamily","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,YAAc,UAAU,cAAgB,UAAU,SAAW,S,4JCG1DC,E,uKAEb,OACI,yBAAKC,UAAU,SAASC,MAAO,CAAEC,OAAQ,QACrC,yBAAKC,IAAKC,IAAMC,IAAI,SACpB,iDACA,uBAAGL,UAAU,YAAb,W,GANoBM,a,0CCFrB,GACXC,QAAS,CACLN,MAAO,CACHO,gBAAiB,cACjBC,UAAW,QAEfC,WAAY,CACRD,UAAW,SAGnBE,UAAW,CACPV,MAAO,CACHW,SAAU,OACVC,WAAY,IACZC,MAAOC,IAAUC,UAErBC,YAAa,CACTH,MAAO,oBAGfI,KAAM,CACFjB,MAAO,CACHa,MAAOC,IAAUC,SACjBR,gBAAiB,iB,iBCnBRW,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAyDVC,UAAY,SAACH,EAAMI,EAAOC,GAOtB,OAAOC,IAAQN,GANK,SAAAO,GAChB,OAAIA,EAAIH,GACGG,EAAIH,GAAOI,cAEfD,EAAIH,KAEmBC,IAjEnB,EAqEnBI,WAAa,SAACC,EAAQC,GAAT,OAA2BC,QAAQC,IAAIH,EAAOI,SAAUH,IAnEjE,EAAKI,MAAQ,CACTC,QAAS,CACL,CACIC,KAAM,KACNC,KAAM,SAAAX,GAAG,OAAI,2BAAIA,EAAIY,KACrBC,UAAU,EAEVN,SAAU,MAEd,CACIG,KAAM,OACNC,KAAM,SAAAX,GAAG,OAAI,2BAAIA,EAAIU,OACrBG,UAAU,EACVN,SAAU,QAGd,CACIG,KAAM,MACNC,KAAM,SAAAX,GAAG,OAAI,2BAAIA,EAAIc,MACrBD,UAAU,EACVN,SAAU,OAEd,CACIG,KAAM,QACNC,KAAM,SAAAX,GAAG,OAAI,2BAAIA,EAAIe,QACrBF,UAAU,EACVN,SAAU,UAGlBS,UAAW,CACP,CACIJ,GAAI,EACJF,KAAM,UACNI,IAAK,GACLC,MAAO,0BAGX,CACIH,GAAI,EACJF,KAAM,QACNI,IAAK,GACLC,MAAO,mBAGX,CACIH,GAAI,EACJF,KAAM,QACNI,IAAK,GACLC,MAAO,sBAlDJ,E,qDAsET,IAAD,EAEgCE,KAAKT,MAAlCC,EAFH,EAEGA,QAAeO,GAFlB,EAEYN,KAFZ,EAEkBM,WACvB,OACI,yBAAKzC,UAAU,QACX,kBAAC,IAAD,CACIA,UAAU,aACV2C,aAAcC,EACdV,QAASA,EACTW,aAAa,EACbC,KAAML,EACNM,OAAQL,KAAKf,WAGbqB,aAAcN,KAAKrB,iB,GArFAf,aCCjC2C,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMtC,IAAUuC,aAElBC,UAAW,CACTF,KAAMtC,IAAUyC,gBAGpBC,WAAY,CACV7C,SAAU,GACV8C,WAAY,yBAIKC,E,uKAEjB,OACE,6BAEE,kBAACC,EAAA,EAAD,CACEX,MAAOA,GACP,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GARuB3C,aCVbuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhD,QAAQgD,MAAMA,EAAMC,a,mBEzI5BlF,EAAOC,QAAU,IAA0B,kC,6ECC3CD,EAAOC,QAAU,CAAC,YAAc,UAAU,cAAgB,UAAU,SAAW,S,mBCA/ED,EAAOC,QAAU,CAAC,YAAc,UAAU,cAAgB,UAAU,SAAW,U","file":"static/js/main.0ce9626e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryMain\":\"#0366d6\",\"secondaryMain\":\"#00e5ff\",\"textMain\":\"#555\"};","import React, { Component } from 'react'\r\nimport \"./Header.scss\"\r\nimport logo from \"../../assets/logo.png\"\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\" style={{ zIndex: '100' }}>\r\n                <img src={logo} alt=\"Logo\" />\r\n                <p>Employee Directory</p>\r\n                <p className=\"alt_text\">ED</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import variables from '../../Styles.scss';\r\n\r\nexport default {\r\n    headRow: {\r\n        style: {\r\n            backgroundColor: 'transparent',\r\n            minHeight: '48px'\r\n        },\r\n        denseStyle: {\r\n            minHeight: '32px'\r\n        }\r\n    },\r\n    headCells: {\r\n        style: {\r\n            fontSize: '13px',\r\n            fontWeight: 600,\r\n            color: variables.textMain,\r\n        },\r\n        activeStyle: {\r\n            color: 'rgba(0,0,0,.87)'\r\n        }\r\n    },\r\n    rows: {\r\n        style: {\r\n            color: variables.textMain,\r\n            backgroundColor: 'transparent',\r\n        }\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport \"./MainTable.scss\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport TableStyles from \"./TableStyles\"\r\nimport orderBy from \"lodash/orderBy\"\r\n\r\nexport default class MainTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    name: \"ID\",\r\n                    cell: row => <p>{row.id}</p>,\r\n                    sortable: false,\r\n\r\n                    selector: \"id\"\r\n                },\r\n                {\r\n                    name: \"Name\",\r\n                    cell: row => <p>{row.name}</p>,\r\n                    sortable: true,\r\n                    selector: \"name\",\r\n\r\n                },\r\n                {\r\n                    name: \"Age\",\r\n                    cell: row => <p>{row.age}</p>,\r\n                    sortable: false,\r\n                    selector: \"age\"\r\n                },\r\n                {\r\n                    name: \"Email\",\r\n                    cell: row => <p>{row.email}</p>,\r\n                    sortable: true,\r\n                    selector: \"email\"\r\n                }\r\n            ],\r\n            employees: [\r\n                {\r\n                    id: 1,\r\n                    name: \"Talmage\",\r\n                    age: 24,\r\n                    email: \"talmagelucas@gmail.com\"\r\n\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"Jacob\",\r\n                    age: 29,\r\n                    email: \"jacob@gmail.com\"\r\n\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: \"Osama\",\r\n                    age: 24,\r\n                    email: \"ZOsama@gmail.com\"\r\n\r\n                }\r\n            ]\r\n\r\n\r\n        }\r\n    }\r\n    sortTable = (rows, field, direction) => {\r\n        const handleField = row => {\r\n            if (row[field]) {\r\n                return row[field].toLowerCase()\r\n            }\r\n            return row[field]\r\n        }\r\n        return orderBy(rows, handleField, direction)\r\n\r\n\r\n    }\r\n    handleSort = (column, sortDirection) => console.log(column.selector, sortDirection);\r\n    render() {\r\n\r\n        const { columns, name, employees } = this.state\r\n        return (\r\n            <div className=\"main\" >\r\n                <DataTable\r\n                    className=\"data_table\"\r\n                    customStyles={TableStyles}\r\n                    columns={columns}\r\n                    fixedHeader={true}\r\n                    data={employees}\r\n                    onSort={this.handleSort}\r\n                    //defaultSortField=\"name\"\r\n                    // sortable={true}\r\n                    sortFunction={this.sortTable}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Header from \"./components/Header\"\r\nimport variables from \"./Styles.scss\"\r\nimport MainTable from \"./components/MainTable\"\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: variables.primaryMain,\r\n    },\r\n    secondary: {\r\n      main: variables.secondaryMain,\r\n    }\r\n  },\r\n  typography: {\r\n    fontSize: 14,\r\n    fontFamily: \"Poppins, sans-serif\"\r\n  }\r\n});\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <ThemeProvider\r\n          theme={theme}>\r\n          <Header />\r\n          <MainTable />\r\n        </ThemeProvider>\r\n      </div >\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.331b94e8.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryMain\":\"#0366d6\",\"secondaryMain\":\"#00e5ff\",\"textMain\":\"#555\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryMain\":\"#0366d6\",\"secondaryMain\":\"#00e5ff\",\"textMain\":\"#555\"};"],"sourceRoot":""}